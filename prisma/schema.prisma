// Prisma schema for Reverse Typing App
// This schema covers users, stats, leaderboard, words, testimonials, features, settings, and achievements

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Change to your DB
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  username      String    @unique
  email         String    @unique
  passwordHash  String
  image         String?    
  level         Int       @default(1)
  country       String    @default("N/A")
  rank          Int       @default(-1)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  stats         TypingStats[]
  leaderboard   Leaderboard[]
  testimonials  Testimonial[]
  achievements  Achievement[]
  userStats     UserStats?
}

model TypingStats {
  id             String   @id @default(uuid())
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  wpm            Int
  accuracy       Float
  timeElapsed    Int
  wordsCompleted Int
  mode           String
  createdAt      DateTime @default(now())
}

model Leaderboard {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  wpm       Int
  accuracy  Float
  mode      String
  createdAt DateTime @default(now())
}

//For homepages Stats
model Testimonial {
  id        String   @id @default(uuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  userName  String
  role      String
  image String
  rating    Int
  text      String
  createdAt DateTime @default(now())
}

model Achievement {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  title       String
  description String
  achievedAt  DateTime @default(now())
  unlockedAt  DateTime? // Added for API compatibility
}

model UserStats {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @unique
  bestWpm      Int      @default(0)
  bestAccuracy Float    @default(0)
  totalTests   Int      @default(0)
  streak       Int      @default(0)
  updatedAt    DateTime @updatedAt
}
